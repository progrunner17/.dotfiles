


[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]]
repo = "Shougo/deoplete.nvim"
on_i = 1
on_event = "InsertCharPre"
hook_source = """
  set completeopt=menu,noinsert,preview
  let g:deoplete#enable_at_startup = 1
	call deoplete#custom#option('smart_case', v:true)
"  let g:deoplete#auto_complete = 1
"  let g:deoplete#auto_complete_delay = 1
"  let g:deoplete#auto_refresh_delay= 1 "ms  "added
"  let g:deoplete#auto_complete_start_length = 1 " removed 
"  let g:deoplete#enable_camel_case = 0
"  let g:deoplete#enable_ignore_case = 0
"  let g:deoplete#enable_refresh_always = 1
"  let g:deoplete#enable_smart_case = 1
"  let g:deoplete#file#enable_buffer_path = 1
"  let g:deoplete#max_list = 10000
"  " autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
  set splitbelow
"""

[[plugins]]
repo = 'justmao945/vim-clang'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']
hook_add = '''
let g:clang_c_options = '-std=c90'
let g:clang_format_auto = 0
let g:clang_auto = 0
let g:clang_format_stylea ='Google'
let g:clang_check_syntax_auto = 0
'''


[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = "Shougo/neosnippet.vim"
on_i = 1
depends = ['neosnippet-snippets']
hook_add = '''
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.

" imap <expr><TAB>
"  \ pumvisible() ? "\<C-n>" :
imap <expr><TAB>
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-7/lib/libclang-7.so.1'
let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
    let g:deoplete#sources#clang#sort_algo = 'priority'
    let g:deoplete#sources#clang#clang_complete_database="./build/"
'''

on_ft = ['c', 'cpp', 'cmake']
depends = ['deoplete.nvim']
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
hook_add = '''
    let g:deoplete#sources#jedi#python_path = '/home/progrunner/.pyenv/shims/python'
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
'''


[[plugins]]
repo = 'thinca/vim-scouter'

[[plugins]]
repo = 'lighttiger2505/gtags.vim'
on_ft = ['c', 'cpp']
